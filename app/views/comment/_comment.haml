%div(class="comment_hide #{comment.id_hash}" style="display: none")
  .comment_detail.entry
    .tagline

      %a{:href => "javascript:void(0);", :onclick => "show_comment(event)"}
        [+]

      %strong
        = link_to comment.author.name, user_path(comment.author)

      .action
        %i.icon-circle-arrow-up
        %span.karma= comment.karma

      .action
        %i.icon-time 
        = relative_time(comment.created_at)

      .action
        %i.icon-cut
        #{comment.replies.size}条子评论

%div(class="comment #{comment.id_hash}" id="#{comment.hash.split(/_/)[-1]}")
  .voting
    - if logged_in? and current_user.upvoted?(comment)
      .arrow.sprite.upmod{:onclick => "vote(event, '#{comment.hash}');"}
      .arrow.sprite.down{:onclick => "vote(event, '#{comment.hash}');"}
    - elsif logged_in? and current_user.downvoted?(comment)
      .arrow.sprite.up{:onclick => "vote(event, '#{comment.hash}');"}
      .arrow.sprite.downmod{:onclick => "vote(event, '#{comment.hash}');"}
    - else
      .arrow.sprite.up{:onclick => "vote(event, '#{comment.hash}');"}
      .arrow.sprite.down{:onclick => "vote(event, '#{comment.hash}');"}

  .comment_detail.entry
    .tagline

      %a{:href => "javascript:void(0);", :onclick => "hide_comment(event)"}
        [-]
      
      %strong
        = link_to comment.author.name, user_path(comment.author)

      .action
        %i.icon-circle-arrow-up
        %span.karma= comment.karma

      .action
        %i.icon-time 
        = relative_time(comment.created_at)

      - if defined?(show_replies) and show_replies
        .action
          - if unread_replies_for_comment(comment) > 0
            %a(href="#{comment_path(comment)}" class="trackable")
              %i.icon-comments.color-orange
              = precede comment.reply_count.to_s do
                = surround '(', ')' do
                  %strong.color-orange +#{unread_replies_for_comment(comment)}
          - else
            = link_to comment.reply_count, comment_path(comment), {:class => 'trackable', :icon => 'icon-comments'}

      .action
        = link_to '链接', comment_path(comment), :icon => 'icon-link'

      - unless defined?(hide_modifications) and hide_modifications
        .action
          %a{:onclick => "comment_reply(event, '#{comment.hash}');"}
            %i.icon-comment-alt
            回复

        - if comment.author == current_user
          .action
            %a{:onclick => "comment_edit(event, '#{comment.hash}');"}
              %i.icon-edit
              编辑

    - case comment.author
    - when current_user
      - if is_new_reply? comment
        .md.current_user.new_reply!= comment.rendered_content
      - else
        .md.current_user!= comment.rendered_content
    - when comment.post.author
      - if is_new_reply? comment
        .md.post_author.new_reply!= comment.rendered_content
      - else
        .md.post_author!= comment.rendered_content
    - else
      - if is_new_reply? comment
        .md.new_reply!= comment.rendered_content
      - else
        .md!= comment.rendered_content

    - if defined?(children) and not children.empty?
      .child= partial 'comment/replies', :locals => {:replies => children.sort_by(&:created_at)}
